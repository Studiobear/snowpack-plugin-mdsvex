// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snowpack-plugin-mdx should compile .md files: .js 1`] = `
"/* generated by Svelte v3.28.0 */
import {
	SvelteComponent,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	space
} from \\"svelte/internal\\";

function create_fragment(ctx) {
	let h1;
	let t1;
	let p;

	return {
		c() {
			h1 = element(\\"h1\\");
			h1.textContent = \\"Hello Sevlte!\\";
			t1 = space();
			p = element(\\"p\\");
			p.textContent = \\"This is a plain markdown file\\";
		},
		m(target, anchor) {
			insert(target, h1, anchor);
			insert(target, t1, anchor);
			insert(target, p, anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(h1);
			if (detaching) detach(t1);
			if (detaching) detach(p);
		}
	};
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Component;"
`;

exports[`snowpack-plugin-mdx should compile .svx files: .js 1`] = `
"/* generated by Svelte v3.28.0 */
import {
	SvelteComponent,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	space
} from \\"svelte/internal\\";

function create_fragment(ctx) {
	let h1;
	let t1;
	let p;

	return {
		c() {
			h1 = element(\\"h1\\");
			h1.textContent = \\"Hello Svelte!\\";
			t1 = space();
			p = element(\\"p\\");
			p.textContent = \\"This is an SVX file\\";
		},
		m(target, anchor) {
			insert(target, h1, anchor);
			insert(target, t1, anchor);
			insert(target, p, anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(h1);
			if (detaching) detach(t1);
			if (detaching) detach(p);
		}
	};
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Component;"
`;

exports[`snowpack-plugin-mdx should render embedded Svelte component: .js 1`] = `
"/* generated by Svelte v3.28.0 */
import {
	SvelteComponent,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	noop,
	safe_not_equal,
	space,
	transition_in,
	transition_out
} from \\"svelte/internal\\";

import { Counter } from \\"./Counter.svelte\\";

function create_fragment(ctx) {
	let h1;
	let t1;
	let counter;
	let current;
	counter = new Counter({});

	return {
		c() {
			h1 = element(\\"h1\\");
			h1.textContent = \\"SVX with counter!\\";
			t1 = space();
			create_component(counter.$$.fragment);
		},
		m(target, anchor) {
			insert(target, h1, anchor);
			insert(target, t1, anchor);
			mount_component(counter, target, anchor);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(counter.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(counter.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(h1);
			if (detaching) detach(t1);
			destroy_component(counter, detaching);
		}
	};
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Component;"
`;
